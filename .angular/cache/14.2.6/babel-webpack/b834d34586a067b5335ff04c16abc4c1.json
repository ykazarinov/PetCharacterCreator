{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/global-sevice.service\";\nimport * as i2 from \"@angular/material/dialog\";\nexport let LanguageComponent = /*#__PURE__*/(() => {\n  class LanguageComponent {\n    constructor(globalService) {\n      this.globalService = globalService;\n    }\n\n    ngOnInit() {}\n\n    translate(locale) {\n      this.globalService.getTranslate(locale).subscribe(response => {\n        this.lang_resp = response;\n        console.log(this.lang_resp);\n\n        for (let h in this.globalService.languages) {\n          if (this.globalService.languages[h].locale === locale) {\n            this.globalService.languages[h].menu_items = this.lang_resp.translate.my_menu;\n            this.globalService.languages[h].pages = this.lang_resp.translate.pages;\n            this.globalService.languages[h].wins = this.lang_resp.translate.wins;\n            this.globalService.languages[h].buttons = this.lang_resp.translate.buttons;\n            this.globalService.languages[h].inputs = this.lang_resp.translate.inputs;\n          }\n        }\n      }); //================\n\n      for (let i in this.globalService.languages) {\n        // 2. меняем активный язык\n        this.globalService.languages[i].current = false;\n\n        if (this.globalService.languages[i].locale === locale) {\n          this.globalService.languages[i].current = true;\n        }\n      }\n    }\n\n  }\n\n  LanguageComponent.ɵfac = function LanguageComponent_Factory(t) {\n    return new (t || LanguageComponent)(i0.ɵɵdirectiveInject(i1.GlobalSeviceService));\n  };\n\n  LanguageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LanguageComponent,\n    selectors: [[\"app-language\"]],\n    inputs: {\n      lang: \"lang\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"lang_bot\", 3, \"mat-dialog-close\", \"click\"]],\n    template: function LanguageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function LanguageComponent_Template_a_click_0_listener() {\n          return ctx.translate(ctx.lang.locale);\n        });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.lang.title);\n      }\n    },\n    dependencies: [i2.MatDialogClose],\n    styles: [\".lang_bot[_ngcontent-%COMP%]{background-image:url(/assets/img/lang_btn.png);background-repeat:no-repeat;background-size:cover;width:200px;height:69px;color:#fff;display:flex;justify-content:center;align-items:center;font-size:1.6rem;font-weight:700;font-family:PTSansNarrowRegular,cursive!important}\"]\n  });\n  return LanguageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}