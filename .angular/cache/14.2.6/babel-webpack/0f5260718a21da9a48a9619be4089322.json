{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/global-sevice.service\";\nconst _c0 = [\"bg_color\"];\nconst _c1 = [\"spec_color\"];\nconst _c2 = [\"white_color\"];\nconst _c3 = [\"glare_color\"];\nexport let PetComponent = /*#__PURE__*/(() => {\n  class PetComponent {\n    constructor(globalService) {\n      this.globalService = globalService;\n    }\n\n    ngOnInit() {}\n\n    ngOnChanges() {}\n\n    ngAfterViewInit() {\n      console.log('(3this.my_part', this.my_part);\n    }\n\n    ngAfterViewChecked() {// this.colorize();\n    }\n\n    colorize() {\n      if (this.bg_color.nativeElement.children[0]) {\n        if (this.bg_color.nativeElement.children[0].querySelector(\"g\")) {\n          this.bg_color.nativeElement.children[0].querySelector(\"g\").style = \"fill: \" + this.my_part.bg_color_default;\n        }\n      }\n\n      if (this.spec_color.nativeElement.children[0]) {\n        if (this.spec_color.nativeElement.children[0].querySelector(\"g\")) {\n          this.spec_color.nativeElement.children[0].querySelector(\"g\").style = \"fill: \" + this.my_part.spec_color_default;\n        }\n      }\n\n      if (this.white_color.nativeElement.children[0]) {\n        if (this.white_color.nativeElement.children[0].querySelector(\"g\")) {\n          this.white_color.nativeElement.children[0].querySelector(\"g\").style = \"fill: #ffffff\";\n        }\n      }\n\n      if (this.glare_color.nativeElement.children[0]) {\n        if (this.glare_color.nativeElement.children[0].querySelector(\"g\")) {\n          this.glare_color.nativeElement.children[0].querySelector(\"g\").style = \"fill: #ffffff\";\n        }\n      }\n    }\n\n  }\n\n  PetComponent.ɵfac = function PetComponent_Factory(t) {\n    return new (t || PetComponent)(i0.ɵɵdirectiveInject(i1.GlobalSeviceService));\n  };\n\n  PetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PetComponent,\n    selectors: [[\"app-pet\"]],\n    viewQuery: function PetComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bg_color = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.spec_color = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.white_color = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.glare_color = _t.first);\n      }\n    },\n    inputs: {\n      my_part: \"my_part\",\n      mypet: \"mypet\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function PetComponent_Template(rf, ctx) {},\n    styles: [\".svg_cont[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]   g[_ngcontent-%COMP%]{fill:#ccc}\"]\n  });\n  return PetComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}