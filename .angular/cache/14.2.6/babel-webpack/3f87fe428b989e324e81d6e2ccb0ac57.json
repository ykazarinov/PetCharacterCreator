{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/global-sevice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"../language/language.component\";\n\nfunction LangWinComponent_ng_container_8_app_language_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-language\", 6);\n  }\n\n  if (rf & 2) {\n    const lang_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"lang\", lang_r1);\n  }\n}\n\nfunction LangWinComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, LangWinComponent_ng_container_8_app_language_1_Template, 1, 1, \"app-language\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const lang_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", lang_r1.active === 1);\n  }\n}\n\nexport let LangWinComponent = /*#__PURE__*/(() => {\n  class LangWinComponent {\n    constructor(globalService) {\n      this.globalService = globalService;\n    }\n\n    ngOnInit() {\n      for (let i in this.globalService.languages) {\n        if (this.globalService.languages[i].current === true) {\n          this.current_lang = this.globalService.languages[i];\n        }\n      }\n    }\n\n  }\n\n  LangWinComponent.ɵfac = function LangWinComponent_Factory(t) {\n    return new (t || LangWinComponent)(i0.ɵɵdirectiveInject(i1.GlobalSeviceService));\n  };\n\n  LangWinComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LangWinComponent,\n    selectors: [[\"app-lang-win\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"languages_dialog_header\"], [\"mat-icon-button\", \"\", \"color\", \"basic\", \"aria-label\", \"Example icon button with a menu icon\", 3, \"mat-dialog-close\"], [1, \"mat-typography\", \"modal-content\"], [1, \"languages_dialog_content\"], [4, \"ngFor\", \"ngForOf\"], [3, \"lang\", 4, \"ngIf\"], [3, \"lang\"]],\n    template: function LangWinComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1)(4, \"mat-icon\");\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"mat-dialog-content\", 2)(7, \"div\", 3);\n        i0.ɵɵtemplate(8, LangWinComponent_ng_container_8_Template, 2, 1, \"ng-container\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.current_lang.wins[0].title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mat-dialog-close\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.globalService.languages);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.MatDialogClose, i3.MatDialogContent, i4.MatButton, i5.MatIcon, i6.LanguageComponent],\n    styles: [\".languages_dialog_header[_ngcontent-%COMP%]{position:relative;background-image:url(/assets/img/header_bg.png);background-repeat:repeat-x;background-size:cover;background-position:bottom;background-color:unset;padding-left:1rem;padding-right:1rem;padding-bottom:.7rem;padding-top:0;display:flex;justify-content:space-between}.languages_dialog_header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-family:Ranchers,cursive;font-size:1.7rem!important;color:#000;opacity:.5;position:unset;margin:unset;left:unset;transform:unset;padding-left:1rem}.languages_dialog_header[_ngcontent-%COMP%]   .close_btn[_ngcontent-%COMP%]{position:absolute;right:1rem;top:.5rem;background-color:#000;opacity:.5;border-radius:50%;width:2.5rem;height:2.5rem}.languages_dialog_content[_ngcontent-%COMP%]{padding-left:1rem;padding-right:1rem;display:flex;flex-direction:column;align-items:center;margin-bottom:1rem}\"]\n  });\n  return LangWinComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}